
#-------------------------------------------------------------------------------
test libtt_sextractor_m57 {sextractor m57} -constraints {
   AUDACE
} -setup {
   createFileConfigSextractor
   file copy -force [file join $::conf(testaudela,rep_images) "m57.fit"]  $::audace(rep_images)
} -body {
   #--- j'extrait les etoiles avec sextractor
   sextractor "m57.fit" -c config.sex
   #--- je compte les etoiles trouvees dans l'image
   set imageStarNb 0
   set fcom [open "catalog.cat" r]
   while {-1 != [gets $fcom line1]} {
      incr imageStarNb
   }
   close $fcom
   return $imageStarNb
} -cleanup {
   file delete -force [file join $::audace(rep_images) "m57.fit"]
   file delete -force [file join $::audace(rep_images) "dummy.fit"]
   file delete -force [file join $::audace(rep_images) "dummy0.fit"]
   file delete -force [file join $::audace(rep_images) "idummy.fit"]
   file delete -force [file join $::audace(rep_images) "catalog.cat"]
   deleteFileConfigSextractor
} -result "248"

#-------------------------------------------------------------------------------
test libtt_sextractor_m45 {sextractor m45} -constraints {
   AUDACE
} -setup {
   createFileConfigSextractor
   file copy -force [file join $::conf(testaudela,rep_images) "m45_champ.fit"]  $::audace(rep_images)
} -body {
   #--- j'extrait les etoiles avec sextractor
   sextractor "m45_champ.fit" -c  config.sex
   #--- je compte les etoiles trouvees dans l'image
   set imageStarNb 0
   set fcom [open "catalog.cat" r]
   while {-1 != [gets $fcom line1]} {
      incr imageStarNb
   }
   close $fcom

   return $imageStarNb
} -cleanup {
   file delete -force [file join $::audace(rep_images) "m45_champ.fit"]
   file delete -force [file join $::audace(rep_images) "dummy0.fit"]
   file delete -force [file join $::audace(rep_images) "dummy.fit"]
   file delete -force [file join $::audace(rep_images) "catalog.cat"]
   deleteFileConfigSextractor
} -result "48"

#-------------------------------------------------------------------------------
test libtt_catchart {imaseries CATCHART} -constraints {
   AUDACE
} -setup {
   file copy -force [file join $::conf(testaudela,rep_images) dummy_test.fit]  $::audace(rep_images)/dummy.fit
} -body {

   #--- je cherche les etoiles dans le catalogue microcat
   ttscript2 "IMA/SERIES . dummy . . .fit . dummy . .fit CATCHART \"path_astromcatalog=$::conf(astrometry,catfolder)/\" astromcatalog=MicroCat \"catafile=./cdummy.fit\" "
   #--- je compte les etoiles trouvees dans le catalogue
   set catalogueStarNb 0
   set fcom [open "usno.lst" r]
   while {-1 != [gets $fcom line1]} {
      incr catalogueStarNb
   }
   close $fcom
   return $catalogueStarNb
} -cleanup {
   file delete -force [file join $::audace(rep_images) "dummy.fit"]
   file delete -force [file join $::audace(rep_images) "cdummy.fit"]
   file delete -force [file join $::audace(rep_images) "usno.lst"]
   file delete -force [file join $::audace(rep_images) "tt.log"]
} -result "314"

#-------------------------------------------------------------------------------
test libtt_astrometry {imaseries ASTROMETRY} -constraints {
   AUDACE
} -setup {
   file copy -force [file join $::conf(testaudela,rep_images) dummy_test.fit]  $::audace(rep_images)/dummy.fit
   file copy -force [file join $::conf(testaudela,rep_images) cdummy_test.fit] $::audace(rep_images)/cdummy.fit
   file copy -force [file join $::conf(testaudela,rep_images) catalog.cat]     $::audace(rep_images)/catalog.cat
} -body {
   #--- j'apparie les etoiles
   ttscript2 "IMA/SERIES . dummy . . .fit . dummy . .fit ASTROMETRY objefile=catalog.cat nullpixel=-10000 delta=5 epsilon=0.0002"
   #--- j'ouvre le fichier resultat des étoiles appareillées
   set matchedStarNb 0
   set fcom [open "com.lst" r]
   while {-1 != [gets $fcom line1]} {
      incr matchedStarNb
   }
   close $fcom
   return $matchedStarNb
} -cleanup {
   file delete -force [file join $::audace(rep_images) "catalog.cat"]
   file delete -force [file join $::audace(rep_images) "dummy.fit"]
   file delete -force [file join $::audace(rep_images) "cdummy.fit"]
   file delete -force [file join $::audace(rep_images) "com.lst"]
   file delete -force [file join $::audace(rep_images) "dif.lst"]
   file delete -force [file join $::audace(rep_images) "eq.lst"]
   file delete -force [file join $::audace(rep_images) "obs.lst"]
   file delete -force [file join $::audace(rep_images) "pointzero.lst"]
   file delete -force [file join $::audace(rep_images) "usno.lst"]
   file delete -force [file join $::audace(rep_images) "xy.lst"]

   file delete -force [file join $::audace(rep_images) "tt.log"]
   file delete -force [file join $::audace(rep_images) "tt.err"]
   file delete -force [file join $::audace(rep_images) "tt_last.err"]
} -result "225"

