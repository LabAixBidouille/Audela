<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
  <title>Buffer</title>
</head>
<body>
<p class="date">Date de mise &#224; jour : 12 d&#233;cembre 2010</p>
<h1>Buffer</h1>
<p>Les commandes qui suivent peuvent &#234;tre appel&#233;es
gr&#226;ce aux commandes <code>buf1</code>, <code>buf2</code>,
... qui sont cr&#233;&#233;es par "<code>::buf::create</code>".
Ces sous-commandes permettent de formater une image, de manipuler
les mots cl&#233;s FITS, et de r&#233;aliser certains traitements
sur l'image port&#233;e par le buffer. Elles sont d&#233;crites
avec la commande <code>buf1</code>, mais sont valables pour
toutes les autres commandes de buffer.</p>
<h2>1. Gestion du buffer</h2>
<h3><a name="setpixels" id="setpixels"></a>buf1 setpixels class
width height format compression pixeldata ?-keep_keywords?
?-pixels_size? ?-reverse_x? ?-reverse_y?</h3>
<p>Dimensionne l'image du buffer &#224; la taille
pr&#233;cis&#233;e par les arguments <em>largeur</em> et
<em>hauteur (*)</em> : Deux entiers repr&#233;sentant la largeur
et la hauteur souhait&#233;es de l'image. Si une image existait
avant cette commande, elle est effac&#233;e. Si pixelData est
nul, alors les pixels sont initialis&#233;s &#224; z&#233;ro.</p>
<p>Param&#232;tres obligatoires :</p>
<blockquote>
  <p>class : CLASS_GRAY|CLASS_RGB<br>
width : Nombre de colonnes (*)<br>
height : Nombre de lignes (*)<br>
format :
FORMAT_BYTE|FORMAT_SHORT|FORMAT_USHORT|FORMAT_FLOAT<br>
compression :
COMPRESS_NONE|COMPRESS_I420|COMPRESS_JPEG|COMPRESS_RAW<br>
pixeldata : Pointeur vers les valeurs des pixels (si pixelData
est nul, cr&#233;e une image avec tous les pixels &#224;
z&#233;ro)</p>
</blockquote>
<p>Param&#232;tres facultatifs :</p>
<blockquote>
  <p>-keep_keywords : Conserve les mots cl&#233;s qui &#233;taient
d&#233;j&#224; dans le buffer<br>
-pixelSize size : Nombre d'octets point&#233;s par pixelData pour
les images JPEG et RAW (*). Ce param&#232;tre est obligatoire
pour les images JPEG et RAW.<br>
-reverseX : Si "1", applique un miroir vertical<br>
-reverseY : Si "1", applique un miroir horizontal</p>
</blockquote>
<p>(*) Pour les images JPEG ou RAW
(compression=COMPRESS_JPEG|COMPRESS_RAW), les param&#232;tres
"width"et "height" ne sont pas utilis&#233;s. Les nombres de
colonnes et de lignes sont extraits des donn&#233;es "pixelData"
avec les commandes "buf1 getpixelswidth" et "buf1
getpixelsheight" apr&#232;s d&#233;compression par la commande
"buf1 setpixels"</p>
<p>Exemple : Image Audine KAF-0400</p>
<blockquote>
  <p>buf1 setpixels CLASS_GRAY 768 512 FORMAT_USHORT COMPRESS_NONE
180412736</p>
  <p>Les donn&#233;es point&#233;es par "pixeldata" &#224;
l'adresse 180412736 sont sous la forme d'un tableau d'entiers 16
bits non sign&#233;s de 768 colonnes et 512 lignes.</p>
</blockquote>
<p>Exemple : Image Webcam Vesta Pro, TouCam couleur</p>
<blockquote>
  <p>buf1 setpixels CLASS_RGB 640 480 FORMAT_BYTE COMPRESS_NONE
180412736</p>
  <p>Les donn&#233;es point&#233;es par "pixeldata" &#224;
l'adresse 180412736 sont sous la forme d'un tableau d'entiers 8
bits non sign&#233;s de 640x3 colonnes et 480 lignes.</p>
</blockquote>
<p>Exemple : Image Canon 300D, JPEG, large:normal</p>
<blockquote>
  <p>buf1 setpixels CLASS_RGB 0 0 FORMAT_SHORT COMPRESS_JPEG
180412736 -pixelSize 1178832</p>
  <p>Les donn&#233;es point&#233;es par "pixeldata" &#224;
l'adresse 180412736 sont sous la forme d'un bloc de 1178832
octets contenant une image JPEG au format d&#233;fini par le
standard JPEG (voir <a href="http://www.ijg.org">http://www.ijg.org</a>
). La commande
"setpixels" utilise la librairie "libjpeg" pour d&#233;compresser
ces donn&#233;es.</p>
</blockquote>
<p>Exemple : Image Canon 300D, RAW</p>
<blockquote>
  <p>buf1 setpixels CLASS_GRAY 0 0 FORMAT_SHORT COMPRESS_RAW
180412736 -pixelSize 7562236</p>
  <p>Les donn&#233;es point&#233;es par "pixeldata" &#224;
l'adresse 180412736 sont sous la forme d'un bloc de 7562236
octets contenant une image RAW au format d&#233;fini par le
constructeur Canon (voir <a
 href="http://www.cybercom.net/%7Edcoffin/dcraw">http://www.cybercom.net/~dcoffin/dcraw</a>
). La commande "setpixels" utilise la librairie "libdcraw" pour
d&#233;compresser ces donn&#233;es.</p>
</blockquote>
<h3><a name="clear" id="clear"></a>buf1 clear</h3>
<p>Efface l&#8217;image et l&#8217;en-t&#234;te contenues dans le
buffer, mais il n'est pas retir&#233; de la liste des
buffers.</p>
<h3><a name="copyto" id="copyto"></a>buf1 copyto
<em>destnum</em></h3>
<p>Copie le contenu du buffer dans le buffer dont le num&#233;ro
est pass&#233; en argument (<em>destnum</em>). Si le buffer de
destination n&#8217;existe pas, il est cr&#233;&#233;, sinon il
est &#233;cras&#233; (les donn&#233;es qui y &#233;taient sont
effac&#233;es et remplac&#233;es par celles du buffer
source).</p>
<h3><a name="type" id="type"></a>buf1 type</h3>
<p>Renvoie le type des donn&#233;es de l'image : short, int,
float, imag. Pour l'instant seules les images float sont
g&#233;r&#233;es.</p>
<h3><a name="pointer" id="pointer"></a>buf1 pointer</h3>
<p>Retourne l'adresse du pointeur de l'image du buffer, qui peut
&#234;tre utilis&#233; dans une librairie.</p>
<h2>2. Gestion des fichiers</h2>
<h3><a name="bitpix" id="bitpix"></a>buf1 bitpix
<em>?byte|short|ushort|long|ulong|float|double?</em></h3>
<p>Indique le type de donn&#233;es &#224; &#233;crire dans le
fichier FITS lors des sauvegardes. Par d&#233;faut, ushort. En
interne, AudeLA manipule des images de type float mais il est
possible de les contraindre &#224; un autre type lors de
l'enregistrement FITS avec cette fonction.</p>
<p>byte : 8 bits non sign&#233;s (0 &#224; 255),</p>
<p>short : 16 bits sign&#233;s (-32768 &#224; 32767),</p>
<p>ushort : 16 bits non sign&#233;s (0 &#224; 65535),</p>
<p>long : 32 bits sign&#233;s (-2 147 483 648 &#224; 2 147 483
647),</p>
<p>ulong : 32 bits non sign&#233;s (0 &#224; 4 294 967 295),</p>
<p>float (-32) : flottant cod&#233; sur 32 bits
(3,4*10<sup>-38</sup> &#224; 3,4*10<sup>+38</sup>),</p>
<p>double : flottant cod&#233; sur 64 bits (1,7*10<sup>-308</sup>
&#224; 1,7*10<sup>+308</sup>).</p>
<p>Les r&#233;glages accessibles dans la fen&#234;tre
'Configuration/Fichiers images' sont :</p>
<ul>
  <li>Entiers (ushort, 16 bits non sign&#233;s),</li>
  <li>Flottant (float, cod&#233; sur 32 bits).</li>
</ul>
<p>La s&#233;lection de l'une des deux options a pour effet
d'appliquer cette option au buffer de chaque visu ouverte ou
&#224; venir. Elle n'a pas d'effet sur un buffer non associ&#233;
&#224; une visu. Dans ce cas il est pr&#233;f&#233;rable de
d&#233;finir la valeur bitpix de ce buffer.</p>
<h3><a name="extension" id="extension"></a>buf1 extension
<em>?file_extension?</em></h3>
<p>Indique le nom de l'extension par d&#233;faut &#224; donner au
fichier FITS qui sera lu ou &#233;crit sur le disque (.fit par
d&#233;faut).</p>
<h3><a name="compress" id="compress"></a>buf1 compress
<em>?none|gzip?</em></h3>
<p>Indique si l'enregistrement de l'image va g&#233;n&#233;rer un
fichier compress&#233; ou non (none par d&#233;faut). Si l'on
souhaite une compression, indiquer gzip. Les fichiers FITS auront
l'extension .gz. Ils peuvent &#234;tre lus directement par la
fonction buf1 load et peuvent &#234;tre d&#233;compress&#233; en
dehors de AudeLA avec de nombreux logiciels de
d&#233;compression.</p>
<p>Le fait de cocher l'option 'Configuration/Fichiers
images/Fichiers images compress&#233;s (.gz)' a pour effet
d'appliquer cette option au buffer de chaque visu ouverte ou
&#224; venir. Elle n'a pas d'effet sur un buffer non associ&#233;
&#224; une visu. Dans ce cas il est n&#233;cessaire de
sp&#233;cifier la compression si elle est souhait&#233;e.</p>
<h3><a name="load" id="load"></a>buf1 load <em>nom</em></h3>
<p>Charge une image FITS stock&#233;e sur disque, ou sur un autre
ordinateur reli&#233; en r&#233;seau. L'extension peut &#234;tre
donn&#233;e ou non, auquel cas elle est prise par d&#233;faut
(cf. buf1 extension). Le nom de chemin peut &#234;tre
indiqu&#233; avec de / au lieu de \, sachant qu'avec des \, il
faut les doubler</p>
<p>Exemple :</p>
<code>buf1 load images/toto</code><br>
<code>buf1 load images\\toto</code><br>
<p>charge l'image toto.fit contenue dans le sous-r&#233;pertoire
images du r&#233;pertoire courant (peut &#234;tre obtenu
gr&#226;ce &#224; la commande TCL pwd).</p>
<h3><a name="save" id="save"></a>buf1 save <em>nom ?-quality
[1...100] ?</em></h3>
<p>Enregistre l'image avec les mots cl&#233;s contenus dans le
buffer.</p>
<p>L'extension du fichier d&#233;termine le format
d'enregistrement de l'image :</p>
<ul>
  <li><b>.fit, .fits, .fts, .fit.gz, .fits.gz, .fts.gz</b> :
Enregistrement au format FITS</li>
  <li><b>extension par d&#233;faut</b> : Enregistrement au format
FITS (cf. buf1 extension)</li>
  <li><b>pas d'extension</b> : Enregistrement au format FITS.
L'extension par d&#233;faut est ajout&#233;e au nom du fichier
(cf. buf1 extension)</li>
  <li><b>.jpg .jpeg</b> : Enregistrement au format JPEG</li>
  <li><b>.png</b> : Enregistrement au format PNG</li>
  <li><b>.bmp</b> : Enregistrement au format BMP</li>
  <li><b>.tif</b> : Enregistrement au format TIFF</li>
</ul>
<p>Option sp&#233;cifique pour l'enregistrement au format JPEG
:</p>
<ul>
  <li>Le param&#232;tre optionnel -quality permet d'indiquer le
taux de compression d'une image JPEG.</li>
</ul>
<p>Exemples :</p>
<table width="100%" border="0">
  <tbody>
    <tr>
      <td><code>buf1 save images/toto.fit</code></td>
      <td><code>Enregistre une image au format FITS</code></td>
    </tr>
    <tr>
      <td><code>buf1 save images/toto</code></td>
      <td><code>Enregistre une image au format FITS nomm&#233;e
      <b>images/toto.xxx</b> si l'extension par d&#233;faut est
      <b>.xxx</b></code></td>
    </tr>
    <tr>
      <td><code>buf1 save images/toto</code>.jpg</td>
      <td><code>Enregistre une image au format JPEG</code></td>
    </tr>
    <tr>
      <td><code>buf1 save images/toto</code>.png</td>
      <td><code>Enregistre une image au format PNG</code></td>
    </tr>
  </tbody>
</table>
<h3><a name="savejpeg" id="savejpeg"></a>buf1 savejpeg
<em>filename ?quality? ?locut? ?hicut?</em></h3>
<p>Enregistre l'image au format JPEG N&amp;B. Si l'extension est
donn&#233;e, elle peut &#234;tre diff&#233;rente de
"<code>.jpg</code>". L'option <em>quality</em> fixe la
qualit&#233; de l'image (de 5 pour une perte &#233;norme &#224;
100 pour une compression sans perte). La valeur par d&#233;faut
de <em>quality</em> est 75. <em>Locut</em> et <em>hicut</em> sont
les seuils de visualisation correspondant respectivement au noir
et au blanc.</p>
<h2>3. Gestion des mots cl&#233;s FITS</h2>
<h3><a name="getkwds" id="getkwds"></a>buf1 getkwds</h3>
<p>Retourne la liste des mots cl&#233;s FITS du buffer sous forme
d'une liste TCL.</p>
<h3><a name="getkwd" id="getkwd"></a>buf1 getkwd
<em>nom</em></h3>
<p>Retourne une liste de cinq &#233;l&#233;ments qui
caract&#233;rise compl&#232;tement le mot cl&#233; FITS
<em>nom</em>. Cette liste est compos&#233;e du nom du
mot cl&#233;, de sa valeur, de son type (int, float, string),
d'un commentaire, et de l'unit&#233; de la grandeur. Si le
mot cl&#233; n'existe pas alors la commande retourne la liste {""
"" none "" ""}. Le nom du mot cl&#233; doit toujours &#234;tre
fourni dans la casse du mot cl&#233; stock&#233;. Par exemple,
NAXIS est diff&#233;rent de naxis. La fonction getkwds permet de
rep&#233;rer cela.</p>
<p>Exemple :</p>
<code>buf1 getkwd NAXIS1</code>
<p>retourne</p>
<code>{NAXIS1 384 int "length of data axis 1" ""}.</code>
<h3><a name="setkwd" id="setkwd"></a>buf1 setkwd
<em>format_mot_cle</em></h3>
<p>Cette commande permet de modifier un mot cl&#233; : L'argument
donn&#233; doit &#234;tre une liste de cinq &#233;l&#233;ments
correspondant au nom du mot cl&#233;, &#224; sa valeur, &#224;
son type (string, int, float), au commentaire, et enfin &#224;
l'unit&#233;. Elle correspond au m&#234;me format que le
r&#233;sultat de la commande pr&#233;c&#233;dente. Le nom du
mot cl&#233; doit contenir au plus 9 caract&#232;res.</p>
<p>Exemple :</p>
<code>buf1 setkwd [list "INSTRU" "T310" string "mon
t&#233;lescope" ""]</code>
<p>modifie ou cr&#233;&#233; le mot cl&#233; INSTRU.</p>
<h3><a name="copykwd" id="copykwd"></a>buf1 copykwd
<em>srcnum</em></h3>
<p>Copie les mots cl&#233;s du buffer source vers le buffer qui
ex&#233;cute cette sous-commande. L'argument est le num&#233;ro
du buffer depuis lequel les mots cl&#233;s seront
copi&#233;s.</p>
<h3><a name="delkwd" id="delkwd"></a>buf1 delkwd
<em>mot_cle</em></h3>
<p>Efface un mot cl&#233; de la liste de ceux pr&#233;sents dans
l'en-t&#234;te FITS.</p>
<h3><a name="delkwds" id="delkwds"></a>buf1 delkwds</h3>
<p>Efface tous les mots cl&#233;s de la liste de l'en-t&#234;te
FITS.</p>
<h2>4. Traitement d'image</h2>
<p>Les fonctions de traitement d'images propos&#233;es par AudeLA
agissent au niveau du buffer.</p>
<h3><a name="getpix" id="getpix"></a>buf1 getpix
<em>coord</em></h3>
<p>Renvoie la valeur du pixel ayant les coordonn&#233;es (x,y)
pass&#233;es en param&#232;tre sous la forme d'une liste &#224;
deux &#233;l&#233;ments [list $x $y]. Les coordonn&#233;es de
l'image vont de (1,1) &#224; (NAXIS1,NAXIS2). getpix retourne une
liste dont le premier &#233;l&#233;ment est le nombre de plan
couleur, et les &#233;l&#233;ments suivants sont les
intensit&#233;s du pixel dans chaque plan.</p>
<p>Exemple 1 : Pour une image en niveaux de gris, getpix retourne
une seule intensit&#233;.</p>
<pre>loadima m57<br>
buf1 getpix [list 100 100]<br>
# 1 330.000
</pre>
<p>Exemple 2 : Pour une image couleur, getpix retourne les 3
intensit&#233;s pour les plans R, G et B.</p>
<pre>loadima 47toucan.jpg<br>
buf1 getpix [list 100 100]<br>
# 3 7.000 1.000 5.000
</pre>
<h3><a name="setpix" id="setpix"></a>buf1 setpix <em>coord
(valgray | valred valgreen valblue)</em></h3>
<p>Affecte la valeur du pixel ayant les coordonn&#233;es (x,y)
pass&#233;es en param&#232;tre sous la forme d'une liste &#224;
deux &#233;l&#233;ments [list $x $y]. Les coordonn&#233;es de
l'image vont de (1,1) &#224; (NAXIS1,NAXIS2). La nouvelle valeur
affect&#233;e est valgrey pour une image en niveaux de gris ou
valred,valgreen,valblue pour une image couleur.</p>
<p>Exemple 1 : Pour une image en niveaux de gris, affecte 51 au
pixel (100,100).</p>
<pre>loadima m57<br>
buf1 setpix [list 100 100] 51
</pre>
<p>Exemple 2 : Pour une image couleur, affecte rouge=51 vert=52
bleu=53 au pixel (100,100).</p>
<pre>loadima 47toucan.jpg<br>
buf1 setpix [list 100 100] 51 52 53
</pre>
<h3><a name="offset" id="offset"></a>buf1 offset
<em>valeur</em></h3>
<p>R&#233;alise un offset sur l'image : Tous les pixels de
l'image sont d&#233;cal&#233;s de <code>valeur</code>.</p>
<h3><a name="sub" id="sub"></a>buf1 sub <em>fichier</em>
<em>valeur</em></h3>
<p>Soustrait l'image contenue dans <code>fichier</code> &#224;
l'image courante, et ajoute un offset de <code>valeur</code>. Le
r&#233;sultat est toujours stock&#233; dans le buffer.</p>
<h3><a name="add" id="add"></a>buf1 add <em>fichier</em>
<em>valeur</em></h3>
<p>Ajoute l'image contenue dans <code>fichier</code> &#224;
l'image du buffer, et ajoute un offset de
<code>valeur</code>.</p>
<h3><a name="div" id="div"></a>buf1 div <em>fichier</em>
<em>valeur</em></h3>
<p>Divise l'image du buffer par celle contenue dans
<code>fichier</code> et multiplie le r&#233;sultat par
<code>valeur</code>.</p>
<h3><a name="mult" id="mult"></a>buf1 mult <em>cste</em></h3>
<p>Multiplie l'image du buffer par une valeur constante.</p>
<h3><a name="noffset" id="noffset"></a>buf1 noffset
<em>valeur</em></h3>
<p>Normalise le fond du ciel &#224; la valeur donn&#233;e en
argument, par un offset.</p>
<h3><a name="ngain" id="ngain"></a>buf1 ngain
<em>valeur</em></h3>
<p>Normalise le fond du ciel &#224; la valeur donn&#233;e en
argument, par une multiplication (gain).</p>
<h3><a name="unsmear" id="unsmear"></a>buf1 unsmear
<em>valeur</em></h3>
<p>Retire la contribution apport&#233;e par le flux incident du
ciel lors de la lecture du CCD lorsque la cam&#233;ra n'est pas
&#233;quip&#233;e d'un obturateur. Le coefficient &#224; donner
en param&#232;tre est le rapport du temps de lecture d'une ligne
sur le temps de pose total de l'image.</p>
<h3><a name="opt" id="opt"></a>buf1 opt <em>noir</em>
<em>offset</em></h3>
<p>Optimise le noir sur le buffer : Le noir qui sert &#224;
l'optimisation est le premier argument. C'est un noir qui est
directement issu de l'acquisition, &#233;ventuellement issu d'une
synth&#232;se m&#233;diane des images de noir acquises. De
m&#234;me pour l'offset. Il est extr&#234;mement important que
l'offset soit pr&#233;sent dans l'image de noir.</p>
<h3><a name="stat" id="stat"></a>buf1 stat
<em>?fenetre?</em></h3>
<p>Analyse l'image du buffer, et retourne une liste compos&#233;e
des 9 &#233;l&#233;ments suivants :</p>
<ul>
  <li>seuil haut convenant bien &#224; la visualisation du fond de
ciel,</li>
  <li>seuil bas associ&#233;,</li>
  <li>valeur maximale de l'image,</li>
  <li>valeur minimale de l'image,</li>
  <li>moyenne globale sur l'image,</li>
  <li>&#233;cart-type global de l'image,</li>
  <li>moyenne du fond de ciel,</li>
  <li>&#233;cart-type du fond de ciel,</li>
  <li>contraste de l'image.</li>
</ul>
<p>L'argument <em>fen&#234;tre</em> est une liste de quatre
valeurs num&#233;riques indiquant les coordonn&#233;es de deux
des coins oppos&#233;s : [list $x1 $y1 $x2 $y2].</p>
<p>Lorsque cet argument est pr&#233;sent, les valeurs des 9
&#233;l&#233;ments ci-dessus sont limit&#233;es &#224; la
fen&#234;tre incluse dans l'image.</p>
<h3><a name="mirrorx" id="mirrorx"></a>buf1 mirrorx</h3>
<p>Retourne l'image horizontalement, c'est &#224; dire que ce
sont les colonnes qui sont d&#233;plac&#233;es.</p>
<h3><a name="mirrory" id="mirrory"></a>buf1 mirrory</h3>
<p>Retourne l'image verticalement : Les lignes sont
permut&#233;es.</p>
<h3><a name="binx" id="binx"></a>buf1 binx <em>x1 x2
?largeur?</em></h3>
<p>Cr&#233;e une nouvelle image de dimensions
<em>largeur</em>*NAXIS2, dont toutes les colonnes sont
identiques, et &#233;gales &#224; la somme de toutes les colonnes
comprises entre les abscisses <em>x1</em> et <em>x2</em> de
l'image &#224; laquelle est appliqu&#233; ce traitement. Cette
commande est utile pour exploiter notamment les images
d'occultations par des ast&#233;ro&#239;des, observ&#233;es par
la m&#233;thode de fil&#233;.</p>
<h3><a name="biny" id="biny"></a>buf1 biny y<em>1 y2
?hauteur?</em></h3>
<p>Cette fonction de traitement est la transposition de la
commande binx : Elle cr&#233;e une nouvelle image de dimensions
NAXIS1*<em>hauteur</em>, dont toutes les lignes sont identiques,
et &#233;gales &#224; la somme de toutes les lignes comprises
entre les ordonn&#233;es <em>y1</em> et <em>y2</em> de l'image
&#224; laquelle est appliqu&#233; ce traitement.</p>
<h3><a name="window" id="window"></a>buf1 window
<em>fen&#234;tre</em></h3>
<p>Extrait une sous-image de l'image &#224; laquelle est
appliqu&#233;e ce traitement. L'argument est une liste de quatre
valeurs num&#233;riques indiquant les coordonn&#233;es de deux
des coins oppos&#233;s : [list $x1 $y1 $x2 $y2].</p>
<h3><a name="rot" id="rot"></a>buf1 rot <em>x1 x2 angle</em></h3>
<p>Rotation de l'image autour du centre (<em>x1</em>,<em>y1</em>)
et d'un angle <em>angle</em> exprim&#233; en degr&#233;s
d&#233;cimaux (15.5 = 15&#176;30'). Les pixels sont compris dans
l'intervalle (1,1) - (NAXIS1,NAXIS2).</p>
<h3><a name="log" id="log"></a>buf1 log <em>coef
?offset?</em></h3>
<p>Applique la fonction suivante &#224; tous les pixels de
l'image : p' = <em>coef</em> * log10(p - <em>offset</em>),
o&#249; p et p' sont respectivement l'ancienne, et la nouvelle
valeur des pixels. Par d&#233;faut, offset vaut 0, et pour les
pixels o&#249; (p - <em>offset</em>) &lt; 0 alors p' =
0.<br>
</p>
<h3><a name="imaseries" id="imaseries"></a>buf1 imaseries
<em>string</em></h3>
<p>Effectue une commande de type IMA/SERIES de la <a
 href="ttus1-fr.htm#functions">librairie TT</a>. Cette commande est
extr&#234;mement importante car elle permet d'exploiter la
plupart des richesses des fonctions IMA/SERIES ( ADD ASTROMETRY
ASTROMETRY2 BACK BINX BINY CATCHART CONV CUTS DIV FILTER GRADIENT
HEADERFITS HOUGH INVERT LOG MATRIX MEDIANX MEDIANY MULT NORMGAIN
NORMOFFSET OFFSET OPT POL2REC PROFILE REC2POL REGISTER
REGISTERFINE RESAMPLE ROT SORTX SORTY SUB SUBDARK STAT TRANS
UNSMEARING WINDOW ) de libTT.</p>
<h3><a name="synthegauss" id="synthegauss"></a>buf1 synthegauss
{xc yc i0 fwhmx fwhmy} ?LimitAdu?</h3>
<p>Ajoute une gaussienne sur l'image &#224; la position (xc,yc),
de largeur &#224; mi hauteur fwhmx,fwhmy et d'intensit&#233; i0.
L'option LimitAdu permet de fixer une valeur seuil au dessus de
laquelle les valeurs auront la valeur du seuil (permet de
reproduire l'effet d'une saturation).</p>
<h3><a name="clipmin" id="clipmin"></a>buf1 clipmin value</h3>
<p>Remplace toutes les valeurs inf&#233;rieures &#224; value par
value (&#233;cr&#234;tage).</p>
<h3><a name="clipmax" id="clipmax"></a>buf1 clipmax value</h3>
<p>Remplace toutes les valeurs sup&#233;rieures &#224; value par
value (&#233;cr&#234;tage).</p>
<h3><a name="scar" id="scar"></a>buf1 scar {x1 y1 x2 y2}</h3>
<p>Cicatrise les valeurs des pixels &#224; l'int&#233;rieur de la
fen&#234;tre {x1 y1 x2 y2} par un r&#233;seau de lignes et
colonnes interpol&#233;es &#224; partir des pixels se situant sur
le bord de la fen&#234;tre.</p>
<h3><a name="scale" id="scale"></a>buf1 scale
ListOfTwoScalingFactors ?NormaFlux?</h3>
<p>Re&#233;chantillonne (bilin&#233;aire) l'image en tenant
compte de facteurs d'&#233;chelle sur chaque axe. La valeur
normaflux permet de fixer le facteur de "dilution" du flux
apr&#232;s le re&#233;chantillonnage. Si sx et sy sont les
facteurs d'&#233;chelle, la valeur par d&#233;faut de normaflux
est 1./(sx*sy). Une valeur de normaflux=1 permet de garder la
dynamique initiale.</p>
<h2>5. Analyse</h2>
<h3><a name="autocuts" id="autocuts"></a>buf1 autocuts</h3>
<p>Calcule et retourne la valeur des seuils haut et bas de
visualisation. Ces valeurs sont ajout&#233;s aux mots cl&#233;s
MIPS-Hi et MIPS-LO de l'en-t&#234;te FITS de l'image.</p>
<h3><a name="xy2radec" id="xy2radec"></a>buf1 xy2radec
<em>coord</em></h3>
<p>Conversion des coordonn&#233;es image en coordonn&#233;es
c&#233;lestes : Il faut que l'image soit pr&#233;alablement
calibr&#233;e astrom&#233;triquement. Les coordonn&#233;es
d'entr&#233;e sont sous la forme d'une liste de deux nombres,
entiers ou d&#233;cimaux. Le r&#233;sultat est une liste
compos&#233;e de l'ascension droite, et de la d&#233;clinaison,
exprim&#233;es en degr&#233;s d&#233;cimaux.</p>
<h3><a name="radec2xy" id="radec2xy"></a>buf1 radec2xy
<em>coord</em></h3>
<p>Conversion de coordonn&#233;es c&#233;lestes en
coordonn&#233;es image : Il faut &#233;galement que l'image soit
calibr&#233;e astrom&#233;triquement. L'ascension droite et la
d&#233;clinaison doivent &#234;tre exprim&#233;es en degr&#233;s
d&#233;cimaux. Le r&#233;sultat est une liste des
coordonn&#233;es x et y exprim&#233;es en pixels d&#233;cimaux
(rarement des valeurs enti&#232;res).</p>
<h3><a name="fwhm" id="fwhm"></a>buf1 fwhm
<em>fen&#234;tre</em></h3>
<p>Calcule la fwhm des pixels contenus dans la fen&#234;tre dont
les coordonn&#233;es sont pass&#233;es dans la liste composant
l'argument. Si la fen&#234;tre est trop grande ou ne contient pas
une seule &#233;toile, le r&#233;sultat n'est pas
repr&#233;sentatif (!). Cette commande retourne une liste de deux
&#233;l&#233;ments, respectivement la fwhm en x, et en y.
L'argument fen&#234;tre est une liste de quatre entiers qui
indiquent les coordonn&#233;es des deux coins oppos&#233;s de la
fen&#234;tre.</p>
<h3><a name="flux" id="flux"></a>buf1 flux <em>coord</em></h3>
<p>Renvoie une liste de deux &#233;l&#233;ments : Le premier est
le flux dans la fen&#234;tre (somme de tous les pixels contenus
dans la fen&#234;tre), et le second est le nombre de pixels ayant
servi &#224; &#233;tablir le flux.</p>
<h3><a name="centro" id="centro"></a>buf1 centro <em>coord
?sigma?</em></h3>
<p>Calcule le centro&#239;de de la fen&#234;tre d&#233;crite par
le premier argument. Le second param&#232;tre est optionnel : Il
s'agit du niveau de bruit en dessous duquel les pixels ne sont
pas pris en compte dans le calcul. Sa valeur par d&#233;faut est
3 : Les pixels en dessous de 3 fois le bruit sur le contour de la
fen&#234;tre sont &#233;limin&#233;s pour le calcul. Les
arguments de retour sont, dans l'ordre :</p>
<ul>
  <li>Xc, le barycentre sur l'axe X.</li>
  <li>Yc, le barycentre sur l'axe Y.</li>
  <li>la distance entre le point (Xc,Yc) et le pixel de plus forte
intensit&#233; dans la fen&#234;tre. Cette distance doit rester
petite si le calcul n'est pas affect&#233; par la contamination
d'une autre &#233;toile dans la fen&#234;tre.</li>
</ul>
<h3><a name="phot" id="phot"></a>buf1 phot <em>coord
?sigma?</em></h3>
<p>Photom&#233;trie dans une fen&#234;tre : La valeur
renvoy&#233;e est la diff&#233;rence entre le flux total sur la
fen&#234;tre, et le flux du fond de ciel, &#233;valu&#233; sur le
contour de la fen&#234;tre. Les arguments de retour sont, dans
l'ordre :</p>
<ul>
  <li>F, le flux int&#233;gr&#233; soustrait du fond de ciel</li>
  <li>N, le nombre de pixels entrant dans le calcul de F.</li>
  <li>B, Le flux estim&#233; du fond de ciel.</li>
</ul>
<h3><a name="photom" id="photom"></a>buf1 photom {x1 y1 x2 y2}
square ?args?</h3>
<p>Photom&#233;trie d'ouverture dans une fen&#234;tre : La valeur
renvoy&#233;e est la diff&#233;rence entre le flux total sur la
fen&#234;tre, et le flux du fond de ciel, &#233;valu&#233; sur le
contour de la fen&#234;tre. Actuellement cette fonction ne
fonctionne qu'avec une ouverture carr&#233;e (square). {x1 y1 x2
y2} est la fen&#234;tre qui entoure le pixel l'astre &#224;
mesurer. Dans un premier temps, un calcul de barycentre
photom&#233;trique est effectu&#233; pour d&#233;finir le centre
de mesure du photom&#232;tre. Les param&#232;tres ?args? sont au
nombre trois d&#233;finis ainsi dans l'ordre :</p>
<ul>
  <li>r1 : Longueur, en pixels, du c&#244;t&#233; du carr&#233; de
mesure de l'astre.</li>
  <li>r2 : Longueur, en pixels, du c&#244;t&#233; du carr&#233;
int&#233;rieur de la mesure de fond de ciel (r2&gt;r1).</li>
  <li>r3 : Longueur, en pixels, du c&#244;t&#233; du carr&#233;
ext&#233;rieur de la mesure de fond de ciel (r3&gt;r2).</li>
</ul>
<p>Le r&#233;sultat comporte 5 valeurs :</p>
<ul>
  <li>F1=somme(r&lt;r1)-mediane(r2&lt;r&lt;r3)</li>
  <li>F2=mediane(r2&lt;r&lt;r3)</li>
  <li>F3=moyenne(r2&lt;r&lt;r3)</li>
  <li>F4=ecart_type(r2&lt;r&lt;r3) (entre 10% et 90%)</li>
  <li>F5=nb_points(r&lt;r1)</li>
</ul>
<p>Rappelons que si G est le gain de la cam&#233;ra CCD
(exprim&#233; en e/adu) et R le bruit de lecture moyen d'un pixel
(exprim&#233; en e), alors l'incertitude de mesure totale rms
&#224; 1 sigma dF (exprim&#233;e en adu) peut &#234;tre
estim&#233;e statistiquement par :</p>
<p>dF = sqrt ( F1*G + F2*F5*G + F5*R*R*G*G) / G</p>
<p>Si l'on ne connait pas, a priori le bruit de lecture de la
cam&#233;ra, on peut approximer l'expression par :</p>
<p>dF = sqrt ( F1*G + F5*F4*F4*G*G) / G</p>
<p>Si l'on connait le nombre de P de pixels ayant permis de
mesurer la valeur du fond (r2&lt;r&lt;r3) alors on peut remplacer
F5 par F5*(1+F5/P).</p>
<h3><a name="fitgauss" id="fitgauss"></a>buf1 fitgauss {x1 y1 x2
y2} ?-sub? ?-fwhmx value? ?-fwhmx value?</h3>
<p>Calcule les param&#232;tres d'ajustement de deux gaussiennes
&#224; partir des profils des valeurs cumul&#233;es sur les
c&#244;t&#233;s de la fen&#234;tre d&#233;finie par la liste {x1
y1 x2 y2}. L'ajustement est effectu&#233; aux moindres
carr&#233;s. Les valeurs de retour sont dans une liste dans
l'ordre suivant :</p>
<ul>
  <li>intensit&#233; (adu) de la gaussienne sur l'axe X.</li>
  <li>position (pixels) du centre de la gaussienne sur l'axe
X.</li>
  <li>largeur &#224; mi hauteur, FWHM (en pixels) de la gaussienne
sur l'axe X.</li>
  <li>valeur du fond (en adu) sur l'axe X.</li>
  <li>intensit&#233; (adu) de la gaussienne sur l'axe Y.</li>
  <li>position (pixels) du centre de la gaussienne sur l'axe
Y.</li>
  <li>largeur &#224; mi hauteur, FWHM (en pixels) de la gaussienne
sur l'axe Y.</li>
  <li>valeur du fond (en adu) sur l'axe Y.</li>
</ul>
<p>L'option -sub va soustraire la gaussienne ajust&#233;e &#224;
l'image. L'option -fwhmx permet de contraindre la valeur de fwhmx
&#224; une valeur. L'option -fwhmy permet de contraindre la
valeur de fwhmy &#224; une valeur.</p>
<h3><a name="histo" id="histo"></a>buf1 histo ?NbBins? ?min?
?max?</h3>
<p>Retourne trois listes contenant les informations sur
l'histogramme de l'image. Chaque liste d&#233;finit :</p>
<ul>
  <li>Liste du nombre de pixels dans l'intervalle [adumin;adumax].
Le nombre d'&#233;l&#233;ments de cette liste est fix&#233; par
la valeur de NbBins (10 par d&#233;faut). Les bornes de valeurs
de l'histogramme sont fix&#233;es par min et max.</li>
  <li>Liste des valeurs moyennes (en adu) des pixels. Cette liste
contient NbBins &#233;l&#233;ments.</li>
  <li>Liste des valeurs adumin;adumax (en adu) des pixels. Cette
liste contient NbBins+1 &#233;l&#233;ments.</li>
</ul>
<h3><a name="slitCentro" id="slitCentro"></a>buf1 slitCentro {x1
y1 x2 y2} starDetectionMode pixelMinCount ?slitWidth?
?signalRatio?</h3>
<p>Calcule le centre de la fen&#234;tre avec un ajustement de
gaussienne ou avec un calcul de barycentre si une fente est
pr&#233;sente dans la fen&#234;tre.</p>
<p>Param&#232;tres :</p>
<ul>
  <li><b>{x1 y1 x2 y2}</b> : Coordonn&#233;es de la fen&#234;tre de
d&#233;tection de l'&#233;toile (en pixels). Param&#232;tre
obligatoire.</li>
  <li><b>starDetectionMode</b> : Choix de l'algorithme de
d&#233;tection. Param&#232;tre obligatoire.
    <ul>
      <li><b>starDetectionMode=</b>1 : Calcule le centre de la
fen&#234;tre avec un ajustement de gaussienne sur les 2 axes X et
Y.</li>
      <li><b>starDetectionMode=</b>2 : Calcule le centre de la
fen&#234;tre en tenant compte de la pr&#233;sence d'une fente.
Calcule xc avec un ajustement de gaussienne sur l'axe X et
calcule yc avec un barycentre sur l'axe Y en excluant la zone de
la fente horizontale plac&#233;e approximativement au milieu de
la fen&#234;tre telle que y=(y2-y1)/2 +-slitWith/2 (voir les
param&#232;tres <b>slitWidth</b> et <b>slitRatio</b>) .</li>
    </ul>
  </li>
  <li><b>pixelMinCount</b> : Nombre minimal de pixels pour
d&#233;terminer la qualit&#233; de l'image (nombre entier
positif). Param&#232;tre obligatoire si
    <b>starDetectionMode</b>=2. pixelMinCount est le nombre minimal
de pixels dans la fen&#234;tre telle que l'intensit&#233; est
sup&#233;rieure au fond du ciel + 6 x sigma(fond du ciel).</li>
  <li><b>slitWidth</b> : Largeur de la fente en pixel (nombre
entier positif). Param&#232;tre obligatoire si
    <b>starDetectionMode</b>=2. Valeur par d&#233;faut=4.</li>
  <li><b>slitRatio</b> : Ratio pour convertir le rapport de flux en
nombre de pixels. Param&#232;tre obligatoire si
    <b>starDetectionMode=</b>2. Valeur par d&#233;faut=1.0</li>
</ul>
<p>Retourne une liste de 4 &#233;l&#233;ments { status xc yc
maxIntensity message }</p>
<ul>
  <li><b>status</b> : status =DETECTED si l'image a la qualit&#233;
requise (voir le param&#232;tre <b>pixelMinCount</b>), sinon
status = NO_SIGNAL.</li>
  <li><b>xc yc</b> : Coordonn&#233;es du centre de la fen&#234;tre
en pixels (nombres d&#233;cimaux). Si status=NO_SIGNAL, les
coordonn&#233;es sont &#233;gales au centre g&#233;om&#233;trique
de la fen&#234;tre.</li>
  <li><b>maxIntensity</b> : Intensit&#233; du pixel le plus
brillant de la fen&#234;tre (utile pour savoir si l'image est
satur&#233;e).</li>
  <li><b>message</b>: Message d'erreur compl&#233;mentaire en cas
d'erreur ou pour d&#233;bugage.</li>
</ul>
</body>
</html>
