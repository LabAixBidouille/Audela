<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
                
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
                
  <meta name="GENERATOR"
 content="Mozilla/4.5 [fr] (Win98; I) [Netscape]">
                
  <meta name="Author" content="Alain Klotz">
  <title>LibAudeLA</title>
                          
  <script language="javascript" src="style.js">







  </script>
</head>
  <body bgcolor="#ffffff">
        
<center>    
<h1> LibAudeLA</h1>
   </center>
        
<center>    
<h2> Librairie d'extension Tcl pour l'astronomie<br>
    Manuel d'utilisation</h2>
   </center>
        
<center>Alain KLOTZ <br>
   version 20030217</center>
     <br>
   &nbsp;    
<center>    
<h1> 1. Principes g&eacute;n&eacute;raux</h1>
   </center>
    LibAudeLA ajoute, &agrave; Tcl, des fonctions sp&eacute;cialis&eacute;es
  &agrave; l'astronomie : gestion d'images au format FITS, traitement d'image,
  pilotage de cam&eacute;ras et de t&eacute;lescopes, etc. Pour faciliter
l'utilisation, de nombreuses fonctions ont &eacute;t&eacute; rassembl&eacute;es
en familles appel&eacute;es objets. Faisons un rapide tour d'horizon de ces
objets :    
<ul>
     <a href="#buf">buffer</a> : les fonction de buffer permettent de charger
  une image en m&eacute;moire, la sauver sur le disque et permet quelques
traitements d'images.          
  <p><a href="#cam">cam&eacute;ra</a> : les fonctions de cam&eacute;ra permettent
  de param&eacute;trer l'acquisition d'image par des cam&eacute;ras CCD.
  </p>
           
  <p><a href="#visu">visualisation</a> : les fonctions de visualisation permettent
  de param&eacute;trer l'affichage des images dans une fen&ecirc;tre du logiciel.
    </p>
           
  <p><a href="#tel">t&eacute;lescope</a> : les fonctions de t&eacute;lescope
  permettent de param&eacute;trer le pointage et le suivi de t&eacute;lescopes.</p>
     
</ul>
    Ces fonctions sont d&eacute;finies dans le fichier libaudela.dll (sous
 Windows) et libaudela.so (sous Linux). LibAudeLA g&egrave;re la lecture
et  l'&eacute;criture disque des images, aux formats FITS et Jpeg, est assur&eacute;
 par la librairie  <a href="ttus1-fr.htm">LibTT.</a> Cette librairie est
appel&eacute;e  automatiquement par LibAudeLA. LibTT ajoute aussi de nombreuses
fonctions  de traitement d'images &agrave; LibAudeLA (appelables &agrave;
partir de l'objet buffer).    
<p>Pour fonctionner correctement, LibAudeLA n&eacute;cessite de charger les 
 extensions Tcl <a href="gzipus-fr.htm">LibGzip</a>, <a
 href="mcusr_fr.htm">LibMC</a>. </p>
     
<p>Enfin, LibAudeLA ajoute aussi <a href="#biblio">quelques fonctions utiles</a>
  &agrave; l'interpr&eacute;teur Tcl </p>
     
<h1> <a name="obj"></a>2. Utilisation des objets de AudeLA</h1>
    Le principe de fond de AudeLA est de travailler avec des objets qui ont
 une t&acirc;che sp&eacute;cifique. Ainsi il existe quatre types d'objets
: l'objet cam&eacute;ra, t&eacute;lescope, buffer, et visualisation. Ils
sont configurables afin de r&eacute;pondre aux exigences de l'utilisateur.
Il est aussi possible d'avoir plusieurs objets de chaque type. Les commandes
 de base suivantes permettent de cr&eacute;er des objets de chaque type,
de  les d&eacute;truire, et de savoir combien il en existe dans le syst&egrave;me
 AudeLA. La cr&eacute;ation de ces objets donne lieu &agrave; la cr&eacute;ation
 des structures de donn&eacute;es internes &agrave; AudeLA qui permettent
de les g&eacute;rer. Les diff&eacute;rents objets d'un m&ecirc;me type sont
num&eacute;rot&eacute;s : si le num&eacute;ro n'est pas impos&eacute;, alors
c'est le plus petit disponible qui est utilis&eacute; (&agrave; partir de
1). Une commande sp&eacute;cifique est alors cr&eacute;&eacute;e pour acc&eacute;der
&agrave; ses donn&eacute;es. Par exemple si on souhaite  cr&eacute;er un
buffer, il faut utiliser la commande "<b><tt>::buf::create</tt></b>"  qui
met en place toutes les structures de donn&eacute;es du buffer. Si c'est
le premier buffer cr&eacute;&eacute; alors il port le num&eacute;ro 1 : la
commande permettant d'y acc&eacute;der par la suite est alors <b><tt>buf1</tt></b>.
 Si on cr&eacute;&eacute; d'autres buffers, d'autres commandes sont cr&eacute;&eacute;es,
 et elles commencent toutes par <tt>buf</tt>, suivi du num&eacute;ro du buffer.
   
<p>La commande cr&eacute;&eacute;e avec chaque &eacute;l&eacute;ment permet
  d'acc&eacute;der &agrave; ses donn&eacute;es, mais aussi d'agir dessus.
Par exemple pour effectuer un offset sur un image, la commande "<b><tt>buf1
offset 100</tt></b>" doit &ecirc;tre utilis&eacute;e. De m&ecirc;me pour
conna&icirc;tre les coordonn&eacute;es d'un t&eacute;lescope (informatis&eacute;)
if faut ex&eacute;cuter "<b><tt>tel1 coord</tt></b>". </p>
     
<p>Par exemple, pour cr&eacute;er un buffer et y charger l'image du fichier
  toto.fit, on proc&eacute;dera ainsi : </p>
     
<blockquote><b><tt>set num [::buf::create]</tt></b> <br>
     <b><tt>buf$num load toto.fit</tt></b></blockquote>
    L'ensemble des fonctions de pilotage de cam&eacute;ra, de t&eacute;lescope
  et d'affichage d'image fonctionnent sur ce principe. Les objets de type
cam&eacute;ra ou t&eacute;lescopes peuvent appeler des drivers externes.
Le chargement est automatique et transparent &agrave; l'utilisateur. Si un
driver externe existe et a le m&ecirc;me nom qu'un driver interne alors c'est
le driver externe qui est choisi. Par exemple, la fonction <b><tt>::cam::create
audine lpt1</tt></b> utilise le driver externe libaudine.dll (libaudine.so
sous Linux) si ce fichier existe.    
<h2> <a name="buf"></a>2.1. <a href="buf.htm">buffers</a></h2>
    La commande "<tt>::buf::create</tt>" a pour r&ocirc;le de cr&eacute;er
 un buffer, c'est &agrave; dire un ensemble de donn&eacute;es capables de
contenir une image, et des mots-cl&eacute;s FITS pour l'identifier. Bien
entendu juste apr&egrave;s la cr&eacute;ation le buffer ne contient pas d'image,
ni de mots-cl&eacute;s. La liste des commandes pour la gestion de buffer
est donn&eacute;e ci-dessous : <br>
   &nbsp; <br>
   &nbsp; <br>
     
<table border="1" width="100%">
    <caption><br>
     </caption><tbody>
             
  </tbody>  <tbody>
       <tr>
    <td>Commande</td>
     <td>Arguments</td>
     <td>R&ocirc;le</td>
    </tr>
     <tr>
    <td><tt>::buf::create</tt></td>
     <td><tt>?numero?</tt></td>
     <td>Cr&eacute;er un buffer vide, sans mots-cl&eacute;s FITS. Si aucun
 num&eacute;ro  n'est sp&eacute;cifi&eacute;.</td>
    </tr>
     <tr>
    <td><tt>::buf::delete</tt></td>
     <td><tt>numero</tt></td>
     <td>Efface le buffer dont le num&eacute;ro est donn&eacute; en param&egrave;tre,
  donc son contenu est effac&eacute;, son num&eacute;ro est retir&eacute;
de la liste des buffers, et &agrave; nouveau disponible pour en recr&eacute;er
  un.</td>
    </tr>
     <tr>
    <td><tt>::buf::list</tt></td>
     <td>&nbsp;</td>
     <td>Renvoie une liste des num&eacute;ros de buffers utilis&eacute;s.</td>
    </tr>
             
  </tbody>   
</table>
    La liste des <a href="buf.htm">fonctions de buffer sont d&eacute;crites
 en d&eacute;tail</a> en cliquant ici. Voici un r&eacute;sum&eacute; :  
 
<ul>
   Chargement et sauvegarde d'images au format FITS. Tous les formats de
donn&eacute;es  d'images (BITPIX) sont autoris&eacute;s.          
  <p>Chargement et sauvegarde des en-t&ecirc;tes des images FITS. Il est
possible de lire, de retirer ou d'ajouter des mot cl&eacute;s, de modifier
des valeurs, etc. </p>
           
  <p>Analyse &eacute;l&eacute;mentaire de l'image : Photocentre, flux d'une
  r&eacute;gion. Statistiques sur une image. </p>
           
  <p>Traitements d'images. de nombreuses fonctions sont de type <a
 href="ttus1-fr.htm#functions">IMA/SERIES</a> de la <a
 href="ttus1-fr.htm">librairie TT</a>.</p>
     
</ul>
    Exemple. Nous allons effectuer l'analyse statistique de image M57.fit.
 La s&eacute;quence Tcl suivante montre la cr&eacute;ation d'un buffer, le
 chargement de l'image, le calcul des param&egrave;tres statistiques puis
le destruction du buffer.    
<blockquote><b><tt>set numbuf [::buf::create]</tt></b> <br>
     <b><tt>buf$numbuf load m57.fit</tt></b> <br>
     <b><tt>set mystatistics [buf$numbuf stat]</tt></b> <br>
     <b><tt>::buf::delete $numbuf</tt></b></blockquote>
    A la fin de cette s&eacute;quence, il est possible de r&eacute;cup&eacute;rer
  la valeur moyenne du fond de ciel de l'image (septi&egrave;me &eacute;l&eacute;ment
  de la liste de retour), par exemple :    
<blockquote><b><tt>set skyback [lindex $mystatistics 6]</tt></b></blockquote>
    Attention, bien se souvenir que l'indexation des listes commence &agrave;
  z&eacute;ro (le septi&egrave;me &eacute;l&eacute;ment &agrave; l'indice
six).    
<h2> <a name="cam"></a>2.2. <a href="cam.htm">cam&eacute;ras</a></h2>
    La commande "<tt>::cam::create</tt>" permet de cr&eacute;er une cam&eacute;ra,
  c'est &agrave; dire de cr&eacute;er une commande commen&ccedil;ant par
<tt>cam</tt>  qui permet de r&eacute;aliser des acquisitions, dans diff&eacute;rents
modes  possibles. <br>
     
<table border="1" width="100%">
    <caption><br>
     </caption><tbody>
             
  </tbody>  <tbody>
       <tr>
    <td>Commande</td>
     <td>Arguments</td>
     <td>R&ocirc;le</td>
    </tr>
     <tr>
    <td><tt>::cam::create</tt></td>
     <td><tt>libcam_driver</tt> <br>
         <tt>?options?</tt> <br>
         <br>
      </td>
     <td>Cr&eacute;er une cam&eacute;ra. Le pilote de la cam&eacute;ra sera
d&eacute;crit dans le fichier d'extension Tcl libcam_driver. Par exemple,
pour utiliser une cam&eacute;ra audine dont le pilote est le fichier libaudine.dll,
"libcam_driver" vaudra "audine". Ainsi, on ne met, dans libcam_driver, que
le nom sans le suffixe lib et sans l'extension. Chaque driver poss&egrave;de
ses propres options. Se renseigner.<br>
   Il est possible de sp&eacute;cifier le num&eacute;ro de l'objet cam&eacute;ra
  ainsi que le nom du composant CCD dans le cas o&ugrave; une m&ecirc;me
cam&eacute;ra  peut &ecirc;tre &eacute;quip&eacute;e de capteurs diff&eacute;rents.
Le num&eacute;ro sera d&eacute;sign&eacute; apr&egrave;s l'option -num.</td>
    </tr>
     <tr>
    <td><tt>::cam::delete</tt></td>
     <td><tt>numero</tt></td>
     <td>Efface la cam&eacute;ra dont le num&eacute;ro est donn&eacute; en
 param&egrave;tre.  La commande <tt>cam</tt> associ&eacute;e est &eacute;galement
 supprim&eacute;e.</td>
    </tr>
     <tr>
    <td><tt>::cam::list</tt></td>
     <td>&nbsp;</td>
     <td>Renvoie une liste des num&eacute;ros de cam&eacute;ras utilis&eacute;s.</td>
    </tr>
             
  </tbody>   
</table>
    La liste des <a href="cam.htm">fonctions de cam&eacute;ra sont d&eacute;crites
  en d&eacute;tail</a> en cliquant ici. <br>
<br>
Exemple. La s&eacute;quence Tcl suivante montre la cr&eacute;ation d'une
  cam&eacute;ra dans AudeLA et le lancement d'une pose de 30 secondes en
binning  2x2 :    
<blockquote><b><tt>set numcam [::cam::create audine lpt1 -ccd kaf400]</tt></b>
    <br>
     <b><tt>cam$numcam buf 1</tt></b> <br>
     <b><tt>cam$numcam exptime 30</tt></b> <br>
     <b><tt>cam$numcam bin {2 2}</tt></b> <br>
     <b><tt>cam$numcam acq</tt></b> <br>
     <b><tt>vwait status_cam$numcam</tt></b></blockquote>
    La fonction vwait permet d'attendre la fin de la pose avant de passer 
&agrave;  la fonction Tcl suivante. Noter que la fonction acq n'est donc pas
bloquante.  On peut donc profiter du temps de pose pour effectuer quelques 
calculs rapides  (par exemple, pr&eacute;traitement de la pr&eacute;c&eacute;dente 
image acquise).    
<h2> <a name="tel"></a>2.3. <a href="tel.htm">t&eacute;lescopes</a></h2>
    La commande "<tt>::tel::create</tt>" permet de cr&eacute;er un t&eacute;lescope.
  Les commandes automatiquement cr&eacute;&eacute;es &agrave; cette occasion
  sont <tt>tel</tt> suivi d'un num&eacute;ro. Par le biais de ces commandes
  il est possible de d&eacute;placer un t&eacute;lescope informatis&eacute;,
  et d'en conna&icirc;tre la position. Il est possible d'avoir plusieurs
t&eacute;lescopes  reli&eacute;s au m&ecirc;me ordinateur sous r&eacute;serve
d'avoir le nombre  suffisant de ports de communication. &nbsp;<br>
     
<table border="1" width="100%">
    <caption><br>
     </caption><tbody>
             
  </tbody>  <tbody>
       <tr>
    <td>Commande</td>
     <td>Arguments</td>
     <td>R&ocirc;le</td>
    </tr>
     <tr>
    <td><tt>::tel::create</tt></td>
     <td><tt>libtel_driver</tt> <br>
         <tt>?options?</tt></td>
     <td>Cr&eacute;er un t&eacute;lescope. Le pilote du t&eacute;lescope
sera d&eacute;crit dans le fichier d'extension Tcl libtel_driver. Par exemple,
pour utiliser un t&eacute;lescope LX200 dont le pilote est le fichier liblx200.dll,
"libtel_driver" vaudra "lx200". Ainsi, on ne met, dans libtel_driver, que
le nom sans le suffixe lib et sans l'extension. Chaque driver poss&egrave;de
ses propres options. Se renseigner.<br>
   Il est possible de sp&eacute;cifier le num&eacute;ro de l'objet t&eacute;lescope.
Le num&eacute;ro sera d&eacute;sign&eacute; apr&egrave;s l'option -num.</td>
    </tr>
     <tr>
    <td><tt>::tel::delete</tt></td>
     <td><tt>numero</tt></td>
     <td>Efface le t&eacute;lescope dont le num&eacute;ro est donn&eacute;
 en  param&egrave;tre. La commande <tt>tel</tt> associ&eacute;e est &eacute;galement
  supprim&eacute;e.</td>
    </tr>
     <tr>
    <td><tt>::tel::list</tt></td>
     <td>&nbsp;</td>
     <td>Renvoie une liste des num&eacute;ros de t&eacute;lescopes utilis&eacute;s.</td>
    </tr>
             
  </tbody>   
</table>
    La liste des <a href="tel.htm">fonctions de t&eacute;lescope sont d&eacute;crites
  en d&eacute;tail</a> en cliquant ici.<br>
<br>
Exemple. La s&eacute;quence Tcl suivante montre la cr&eacute;ation d'un  t&eacute;lescope
dans AudeLA et le pointage &agrave; des coordonn&eacute;es  pr&eacute;cis&eacute;es
(J2000) :    
<blockquote><b><tt>set numtel [::tel::create lx200 com2]</tt></b> <br>
     <b><tt>tel$numtel goto "20h45m34s -16d54m"</tt></b></blockquote>
        
<h2> <a name="visu"></a>2.4. <a href="visu.htm">visualisation</a></h2>
    La commande "<tt>::visu::create</tt>" permet de cr&eacute;er un lien
entre   un buffer (qui contient une image) et une image Tk (TkImage). C'est
ce lien  qui permet de d&eacute;finir des seuils de visualisation, et des
palettes.   Pour cr&eacute;er une visualisation il faut deux arguments obligatoires
: un num&eacute;ro de buffer, et un num&eacute;ro d'image. Le num&eacute;ro
  de buffer permet de savoir d'o&ugrave; viennent les images &agrave; afficher.
  Le num&eacute;ro d'image sert &agrave; rep&eacute;rer dans quelle image
Tk afficher le contenu du buffer. Il faut que les images Tk soient appel&eacute;es
  <tt>image</tt> suivi du num&eacute;ro d'image. Ces images Tk sont cr&eacute;&eacute;es
  par la commande "<tt>image create photo <i>nom_image</i></tt>", ou automatiquement
  par "<tt>::visu::create</tt>". &nbsp;<br>
     
<table border="1" width="100%">
    <caption><br>
     </caption><tbody>
             
  </tbody>  <tbody>
       <tr>
    <td>Commande</td>
     <td>Arguments</td>
     <td>R&ocirc;le</td>
    </tr>
     <tr>
    <td><tt>::visu::create</tt></td>
     <td><tt>bufNo imgNo ?numero?</tt></td>
     <td>Cr&eacute;er une visualisation qui affiche les donn&eacute;es du 
buffer  num&eacute;ro <tt>bufNo</tt> dans l'image <tt>image$imgNo</tt>. Ces 
deux arguments sont obligatoires, et on peut &eacute;ventuellement choisir 
son num&eacute;ro.</td>
    </tr>
     <tr>
    <td><tt>::visu::delete</tt></td>
     <td><tt>numero</tt></td>
     <td>Efface la visualisation dont le num&eacute;ro est donn&eacute; en
 param&egrave;tre.  La commande <tt>visu</tt> associ&eacute;e est &eacute;galement
 supprim&eacute;e.</td>
    </tr>
     <tr>
    <td><tt>::visu::list</tt></td>
     <td>&nbsp;</td>
     <td>Renvoie une liste des num&eacute;ros de visualisation utilis&eacute;s.</td>
    </tr>
             
  </tbody>   
</table>
    La liste des <a href="visu.htm">fonctions de visualisation sont d&eacute;crites
  en d&eacute;tail</a> en cliquant ici. Voici un r&eacute;sum&eacute; : 
  
<ul>
   R&eacute;glage des seuils de visualisation          
  <p>Lien entre un buffer image et une Tk_PhotoImage d'un canvas. </p>
           
  <p>Changement de palette d'affichage.</p>
     
</ul>
    Exemple. Nous allons visualiser l'image de M57.fit. La s&eacute;quence
 Tcl suivante montre la cr&eacute;ation d'un &eacute;cran de visu &agrave;
 l'int&eacute;rieur d'une fen&ecirc;tre appel&eacute;e ici .test. Tout d'abord,
 cr&eacute;ation d'un widget Tk de type canvas (.imag1) dans une fen&ecirc;tre
 (.test) :    
<blockquote><b><tt>toplevel .test</tt></b> <br>
     <b><tt>canvas .test.imag1 -width 384 -height 256</tt></b> <br>
     <b><tt>pack .test.imag1</tt></b></blockquote>
    Il faut ensuite cr&eacute;er une zone de visu pour AudeLA qui va faire
 le lien entre le num&eacute;ro de buffer qui sera visualis&eacute; et le
num&eacute;ro de la Tk_PhotoImage qui sera pr&eacute;sente dans le canvas
:    
<blockquote><b><tt>set b [::buf::create]</tt></b> <br>
     <b><tt>set v [::visu::create $b 5]</tt></b></blockquote>
    Le $b reprend le num&eacute;ro du buffer cr&eacute;&eacute; : c'est celui
  qui sera affich&eacute;. Le 5 signifie que l'image sera affich&eacute;e
dans l'image Tk <tt>image5</tt>, qui est elle-m&ecirc;me plac&eacute;e dans
le canvas (un canvas permet de regrouper des objets graphiques divers) :
   
<blockquote><b><tt>image create photo image5</tt></b> <br>
     <b><tt>.test.imag1 create image 1 1 -image image5 -anchor nw</tt></b></blockquote>
    Il faut charger une image dans le buffer :    
<blockquote><b><tt>buf$b load images/m57</tt></b></blockquote>
    Ainsi, la visualisation de l'image pr&eacute;sente dans le buffer $b
dans   le canvas se fera simplement par :    
<blockquote><b><tt>visu$v disp</tt></b></blockquote>
    La modification des seuils suivie de la revisualisation sera :    
<blockquote><b><tt>visu$v cuts [8000 4000]</tt></b> <br>
     <b><tt>visu$v disp</tt></b></blockquote>
    Pour essayer, copiez les lignes pr&eacute;c&eacute;dentes dans un fichier
  texte (toto.tcl par exemple), et dans la console Aud'ACE entrez "<tt>source
  toto.tcl</tt>" ...    
<h1> <a name="biblio"></a>3. Fonctions de biblioth&egrave;que de AudeLA</h1>
        
<h3> <a name="fits2colorjpeg"></a>fits2colorjpeg filenamer filenameg filenameb
  filenamejpg ?quality? ?locutr hicutr locutg hicutg locutb hicutb?</h3>
    Enregistre le contenu des images de trois fichiers FITS sous la forme 
d'une  seul fichier Jpeg couleur. Les fichiers FITS contiennent les images 
rouge,  verte et bleu (respectivement filenamer filenameg filenameb). Le nom
du fichier Jpeg est donn&eacute; par le param&egrave;tre filenamejpeg. L'option
<i>quality</i> permet de r&eacute;gler le taux de perte lors de la compression
(=100 compression sans perte. =75 par d&eacute;faut). Les param&egrave;tres
optionnels <i>locutr hicutr locutg hicutg locutb hicutb</i> permettent d'indiquer
les valeurs num&eacute;riques des seuils haut et bas dans chaque couleur.
Par d&eacute;faut les valeurs des seuils sont lues comme les valeurs des
mots cl&eacute; MIPS-Hi et MIPS-LO de l'en-t&ecirc;te FITS.    
<h3> <a name="ttscript"></a>ttscript filename</h3>
    Ex&eacute;cute <a href="ttus1-fr.htm#mode%20script">un script TT</a>. 
contenu  dans le fichier texte <i>filename</i>. cf. fonction <a
 href="#ttscript2">ttscript2</a>  pour de plus amples explications.    
<h3> <a name="ttscript2"></a>ttscript2 string</h3>
    Ex&eacute;cute <a href="ttus1-fr.htm#mode%20script">un script TT</a>.<i>string</i>
  est une cha&icirc;ne de caract&egrave;res contenant un script sp&eacute;cifique
  pour le traitement d'images. Il ne s'agit plus de scripts Tcl mais de scripts
  TT. Il convient donc de d&eacute;tailler la forme des scripts.    
<p>Un script TT est compos&eacute; d'une seule cha&icirc;ne de caract&egrave;res
  contenant des lignes (s&eacute;parateurs \n) ou bien d'une seule ligne
termin&eacute;e  par le caract&egrave;re final nul (caract&egrave;re \0).
Chaque ligne est  analys&eacute;e s&eacute;quentiellement. Au sein d'une
ligne, la premi&egrave;re  cha&icirc;ne de caract&egrave;res rencontr&eacute;e
doit contenir le mot cl&eacute; de d&eacute;finition. Si le mot cl&eacute;
n'est pas reconnu, le restant de la ligne est interpr&eacute;t&eacute; comme
une simple remarque. Le s&eacute;parateur blanc est utilis&eacute; pour les
param&egrave;tres suivants de la ligne. </p>
     
<p>Il existe actuellement trois mots cl&eacute; de d&eacute;finition : </p>
     
<ul>
   SET/VAR : initialise la valeur d'une variable de substitution. Cette d&eacute;finition 
 comporte deux arguments : le mot initial &agrave; substituer et le mot qui 
 le remplacera. Cette substitution sera effective pour toutes les lignes suivantes,
 jusqu'&agrave; la fin du script TT.          
  <p>IMA/SERIES : traitement d'une s&eacute;rie d'images et g&eacute;n&egrave;re
  autant d'images en sortie qu'en entr&eacute;e. </p>
           
  <p>IMA/STACK : traitement d'une pile d'images et g&eacute;n&egrave;re une
  seule image en sortie.</p>
     
</ul>
    Les param&eacute;trages des fonctions IMA/SERIES et IMA/STACK sont expos&eacute;s
  en d&eacute;tail dans une page sp&eacute;cifique concernant <a
 href="ttus1-fr.htm#mode%20script">la syntaxe des scripts TT. L'exemple</a> 
 Tcl suivant montre comment corriger le dark d'une image par la m&eacute;thode 
 de l'optimisation du noir sur l'image i.fit :    
<blockquote><b><tt>ttscript2 "IMA/SERIES c:/ccd/ i . . .fit c:/ccd/prt/ i 
 . .fit OPT dark=d60.fit bias=d0.fit unsmearing=0.0005"</tt></b></blockquote>
    Noter l'utilisation du / au lieu du \ pour d&eacute;finir les dossiers
 sous Windows. Ceci est normal et fonctionne parfaitement. Le symbole \ n'est
 pas employ&eacute; car il est utilis&eacute; par Tcl en tant qu'identificateur
  de remplacement. Si l'on souhaite quant m&ecirc;me utiliser le symbolisme
  \ pour d&eacute;signer les chemins Windows, alors il faut remplacer \ par
  deux \\. Exemple :    
<blockquote><b><tt>ttscript2 "IMA/SERIES c:\\ccd\\ i . . .fit c:\\ccd\\prt\\
  i . .fit OPT dark=d60.fit bias=d0.fit unsmearing=0.0005"</tt></b></blockquote>
        
<h3> <a name="combit"></a>combit ComNumber PinNumber ?BitValue?</h3>
    Lit ou &eacute;crit des &eacute;tats binaires sur les broches du port 
s&eacute;rie  num&eacute;ro <i>ComNumber</i> (1, 2, etc.). BitValue vaut 0
ou 1 et n'agit  que sur les broches disponibles en &eacute;criture. PinNumber 
est le num&eacute;ro  de la broche sur une prise DB9 ou bien la d&eacute;signation 
de la broche:  <br>
   &nbsp; <br>
   &nbsp; <br>
     
<table border="1" cols="4" width="100">
    <caption><br>
     </caption><tbody>
             
  </tbody>  <tbody>
       <tr>
    <td>d&eacute;signation</td>
     <td>lecture/&eacute;criture</td>
     <td>DB9</td>
     <td>DB25</td>
    </tr>
     <tr>
    <td>                      
      <center>DCD&nbsp;</center>
    </td>
     <td>                      
      <center>lecture&nbsp;</center>
    </td>
     <td>                      
      <center>1&nbsp;</center>
    </td>
     <td>                      
      <center>&nbsp;8&nbsp;</center>
    </td>
    </tr>
     <tr>
    <td>                      
      <center>RxD&nbsp;</center>
    </td>
     <td>&nbsp;</td>
     <td>                      
      <center>2&nbsp;</center>
    </td>
     <td>                      
      <center>&nbsp;3&nbsp;</center>
    </td>
    </tr>
     <tr>
    <td>                      
      <center>TxD&nbsp;</center>
    </td>
     <td>                      
      <center>&eacute;criture&nbsp;</center>
    </td>
     <td>                      
      <center>3&nbsp;</center>
    </td>
     <td>                      
      <center>2&nbsp;</center>
    </td>
    </tr>
     <tr>
    <td>                      
      <center>DTR&nbsp;</center>
    </td>
     <td>                      
      <center>&eacute;criture&nbsp;</center>
    </td>
     <td>                      
      <center>4&nbsp;</center>
    </td>
     <td>                      
      <center>&nbsp;20&nbsp;</center>
    </td>
    </tr>
     <tr>
    <td>                      
      <center>GND&nbsp;</center>
    </td>
     <td>                      
      <center>&nbsp;(masse 0V)&nbsp;</center>
    </td>
     <td>                      
      <center>5&nbsp;</center>
    </td>
     <td>                      
      <center>&nbsp;7&nbsp;</center>
    </td>
    </tr>
     <tr>
    <td>                      
      <center>DSR&nbsp;</center>
    </td>
     <td>                      
      <center>lecture&nbsp;</center>
    </td>
     <td>                      
      <center>6&nbsp;</center>
    </td>
     <td>                      
      <center>&nbsp;6&nbsp;</center>
    </td>
    </tr>
     <tr>
    <td>                      
      <center>RTS&nbsp;</center>
    </td>
     <td>                      
      <center>&eacute;criture&nbsp;</center>
    </td>
     <td>                      
      <center>7&nbsp;</center>
    </td>
     <td>                      
      <center>&nbsp;4&nbsp;</center>
    </td>
    </tr>
     <tr>
    <td>                      
      <center>CTS&nbsp;</center>
    </td>
     <td>                      
      <center>lecture&nbsp;</center>
    </td>
     <td>                      
      <center>8&nbsp;</center>
    </td>
     <td>                      
      <center>&nbsp;5&nbsp;</center>
    </td>
    </tr>
     <tr>
    <td>                      
      <center>RI&nbsp;</center>
    </td>
     <td>                      
      <center>lecture&nbsp;</center>
    </td>
     <td>                      
      <center>9&nbsp;</center>
    </td>
     <td>                      
      <center>&nbsp;22&nbsp;</center>
    </td>
    </tr>
             
  </tbody>   
</table>
    Exemple : <b><tt>combit 2 DTR 1</tt></b>, passe au niveau 1 la broche 
num&eacute;ro  4 (DTR) du port COM2.    
<p>Il faut pr&eacute;alablement ouvrir le port de communication pour envoyer
  ou recevoir les bits. Exemple: </p>
     
<p><b><tt>set tty [open com2 w]</tt></b> <br>
   <b><tt>combit 2 DTR 1</tt></b> <br>
   <b><tt>close $tty</tt></b> </p>
     
<p>Les fonctions open et close proviennent de l'interpr&eacute;teur Tcl.
</p>
     
<h3> <a name="libstd_id"></a>libstd_id</h3>
    Retourne la date de la compilation de la librairie LibAudeLA utilis&eacute;e.
    
<h3> <a name="libstd_debugserial"></a>libstd_debugserial ?on?</h3>
    Fonction obsol&egrave;te de d&eacute;buggage.    
<h3> <a name="historik"></a>historik add|before|after|synchro|list</h3>
    G&egrave;re une liste interne qui peut servir &agrave; garder l'historique
  de commandes. Les options sont les suivantes:    
<ul>
   add chaine : ajoute une cha&icirc;ne de caract&egrave;res.          
  <p>before : renvoie la cha&icirc;ne avant la position courante. </p>
           
  <p>after : renvoie la cha&icirc;ne apr&egrave;s la position courante. </p>
           
  <p>synchro : synchro du point courant sur le point d'insertion et ajoute
  une cha&icirc;ne de caract&egrave;res. </p>
           
  <p>list : renvoie la liste des commandes entr&eacute;es.</p>
     
</ul>
        
<h3> <a name="getclicks"></a>getclicks</h3>
    Retourne un nombre qui s'incr&eacute;mente d'une unit&eacute; &agrave;
 chaque milliseconde.    
<h3> <a name="add2"></a>add2 in operand out const nb</h3>
    Addition d'une image <i>operand</i> &agrave; un lot de <i>nb</i> images
 de nom g&eacute;n&eacute;rique <i>in</i>. <i>const</i> est un nombre (en
pas codeurs) &agrave; ajouter &agrave; tous les pixels. Le nom g&eacute;n&eacute;rique
  des images de sortie est <i>out</i>.    
<h3> <a name="div2"></a>div2 in operand out const nb</h3>
    Division d'une image <i>operand</i> &agrave; un lot de <i>nb</i> images
 de nom g&eacute;n&eacute;rique <i>in</i>. <i>const</i> est un nombre (en
pas codeurs) &agrave; multiplier &agrave; tous les pixels. Le nom g&eacute;n&eacute;rique
  des images de sortie est <i>out</i>.    
<h3> <a name="offset2"></a>offset2 in out const nb</h3>
    Addition d'une valeur constante <i>const</i> (en pas codeurs) &agrave;
 tous les pixels d'un lot de <i>nb</i> images de nom g&eacute;n&eacute;rique
 <i>in</i>. Le nom g&eacute;n&eacute;rique des images de sortie est <i>out</i>.
    
<h3> <a name="ngain2"></a>ngain2 in out const nb</h3>
    Normalisation du gain &agrave; un lot de <i>nb</i> images de nom g&eacute;n&eacute;rique
  <i>in</i>. <i>const</i> est un nombre (en pas codeurs) qui repr&eacute;sente
  la moyenne des pixels des images de sortie.&nbsp; Le nom g&eacute;n&eacute;rique
  des images de sortie est <i>out</i>.    
<h3> <a name="noffset2"></a>noffset2 in out const nb</h3>
    Normalisation du fond de ciel &agrave; un lot de <i>nb</i> images de
nom   g&eacute;n&eacute;rique <i>in</i>. <i>const</i> est un nombre (en pas
codeurs)   qui repr&eacute;sente la moyenne des pixels des images de sortie.
Le nom  g&eacute;n&eacute;rique des images de sortie est <i>out</i>    
<h3> <a name="opt2"></a>opt2 in dark offset out const nb</h3>
    Soustraction du noir optimis&eacute; &agrave; un lot de <i>nb</i> images
  de nom g&eacute;n&eacute;rique <i>in</i>. Le nom de fichier du noir est
<i>dark</i> et le nom de fichier de pr&eacute;charge (bias) s'appelle <i>offset</i>.
<i>const</i> est un nombre (en pas codeurs) &agrave; ajouter &agrave; tous
les pixels. Le nom g&eacute;n&eacute;rique des images de sortie est <i>out</i>.
   
<h3> <a name="register2"></a>register2 in out number</h3>
    Registration d'un lot de <i>nb</i> images de nom g&eacute;n&eacute;rique
  <i>in</i>. Le nom g&eacute;n&eacute;rique des images de sortie est <i>out</i>.
    
<h3> <a name="sadd"></a>sadd in out number</h3>
    Somme d'une pile de <i>nb</i> images de nom g&eacute;n&eacute;rique <i>in</i>.
  Le nom de l'image de sortie est <i>out</i>.    
<h3> <a name="smean"></a>smean in out number</h3>
    Moyenne d'une pile de <i>nb</i> images de nom g&eacute;n&eacute;rique 
<i>in</i>.  Le nom de l'image de sortie est <i>out</i>.    
<h3> <a name="smedian"></a>smedian in out number</h3>
    M&eacute;diane d'une pile de <i>nb</i> images de nom g&eacute;n&eacute;rique
  <i>in</i>. Le nom de l'image de sortie est <i>out</i>.    
<h3> <a name="sub2"></a>sub2 in operand out const nb</h3>
    Soustraction d'une image <i>operand</i> &agrave; un lot de <i>nb</i>
images   de nom g&eacute;n&eacute;rique <i>in</i>. <i>const</i> est un nombre
(en  pas codeurs) &agrave; ajouter &agrave; tous les pixels.    
<h3> <a name="trans2"></a>trans2 in out number dx dy</h3>
    Translation d'un lot de <i>nb</i> images de nom g&eacute;n&eacute;rique
 <i>in</i>. Le nom g&eacute;n&eacute;rique des images de sortie est <i>out</i>.
 La translation vaut <i>dx</i> et <i>dy</i> (en pixels).    
<h3> <a name="hostaddress"></a>hostaddress</h3>
    Retourne une liste compos&eacute;e d'au moins deux &eacute;l&eacute;ments. 
Le dernier &eacute;l&eacute;ment contient le nom de la machine locale. Les 
premiers &eacute;l&eacute;ments sont des listes contenant les quatre nombres 
de l'adresse  IP locale. Par exemple : {192 168 0 1} {62.134.25.67} mycomputer.<br>
   
<h3><a name="ping"></a>ping IPAddress ?timeout?</h3>
  Effectue la fonction ping &agrave; une adresse IP donn&eacute;e. Retourne
 une liste compos&eacute;e de deux &eacute;l&eacute;ments. Le premier  &eacute;l&eacute;ment
 vaut 0 en cas d'&eacute;chec &agrave; la connexion et 1 en cas de succ&egrave;s.
 &nbsp;Le second &eacute;l&eacute;ment est un texte donnant des explications
 compl&eacute;mentaires.<br>
  <br>
      
<p><!-- #BeginLibraryItem "/11/Library/MAJ%20AK.lbi" --><i><font
 size="-1">Cette page est tenue &agrave; jour par Alain Klotz.</font></i><!-- #EndLibraryItem -->
  <br>
      <!-- #BeginLibraryItem "/11/Library/Date%20MAJ.lbi" --><i><font
 size="-1">Derni&egrave;re mise &agrave; jour le :&nbsp;<!-- #EndLibraryItem -->17/02/2003 
 </font></i></p>
     
<center> <i><font size="-1">  </font></i>   
<p><i><font size="-1">&nbsp;</font></i></p>
    <!-- #BeginLibraryItem "/12/Library/barre de nav du bas.lbi" -->    
<div align="center"> <i><font size="-1">     
<table width="60%" border="0" cellspacing="0" cellpadding="0">
        <tbody>
       <tr>
           <td>                      
      <p align="center"><font
 face="Verdana, Arial, Helvetica, sans-serif" size="2"><a
 href="index.htm">Accueil</a>            | <a href="copi.htm">Copies d'&eacute;crans</a> 
 | <a href="telecha.htm">T&eacute;l&eacute;charger</a>            | <a
 href="plan.php">Plan du site</a> | <a href="interfa.htm">Interface      
     standard</a> | <a href="theme.htm">Observations &agrave; th&egrave;mes</a> 
            | <a href="script.htm">Scripts</a> | <a href="extensio.htm">Extensions</a> 
            | <a href="faq.htm">FAQ</a> | <a href="quiveu.htm">Qui veut aider 
            ?</a> | <a href="liens.htm">Liens</a> | <a href="bug.php">Suivi 
            des bugs</a> | <a href="followup.php">Suivi des scripts</a></font></p>
                       
      <p align="center">&nbsp;</p>
         </td>
       </tr>
               
  </tbody>   
</table>
   </font></i></div>
   <!-- #EndLibraryItem --><i><font size="-1">  </font></i></center>
   <br>
   <br>
  <br>
 <br>
</body>
</html>
