
#-------------------------------------------------------------------------------
test libcatalog_load { load } -constraints {
   AUDACE
} -setup {


} -body {
   set catchError [ catch {
      #--- je charge la librairie libcatalog
      load [file join $::audela_start_dir libcatalog[info sharedlibextension]]
   }]
   return $catchError
} -cleanup {

} -result 0


#-------------------------------------------------------------------------------
test libcatalog_list_catalog { liste des catalogues } -constraints {
   AUDACE
} -setup {


} -body {
   set catchError [ catch {
      #--- je charge la librairie libcatalog
      load [file join $::audela_start_dir libcatalog[info sharedlibextension]]
      #--- je recherche les commandes de lecture des catalogues
      set catas [ info commands cs* ]
      #--- je liste les catalogues
      set cats ""
      foreach cata $catas {
          lappend cats [ string range $cata 2 end ]
      }
      set result $cats
   } msg]
   return "$msg"
} -cleanup {

} -result "ppmxl ppmx tycho2 ucac2 ucac3 ucac4 2mass nomad1 usnoa2"


#-------------------------------------------------------------------------------
test libcatalog_cstycho2_sansparam { cstycho2 sans parametre } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      #--- je recupere le message d'erreur "usage ..."
      set result [cstycho2]
   } msg]
   return $msg
} -cleanup {

} -result "usage: cstycho2 pathOfCatalog ra(deg) dec(deg) radius(arcmin) ?magnitudeFaint(mag)? ?magnitudeBright(mag)?"


#-------------------------------------------------------------------------------
test libcatalog_cstycho2_catalog_existe { trouve 1 etoile } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      set result [cstycho2 [file join $::audace(rep_userCatalogTycho2)] 10 5 5]
   } msg]

   if { $catchError==0 } {
      return [ llength [ lindex $result 1 ] ]
   } else {
      return $msg
   }
} -cleanup {

} -result "1"


#-------------------------------------------------------------------------------
test libcatalog_csucac2_sansparam { csucac2 sans parametre } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      #--- je recupere le message d'erreur "usage ..."
      set result [csucac2]
   } msg]
   return $msg
} -cleanup {

} -result "usage: csucac2 pathOfCatalog ra(deg) dec(deg) radius(arcmin) ?magnitudeFaint(mag)? ?magnitudeBright(mag)?"


#-------------------------------------------------------------------------------
test libcatalog_csucac2_catalog_existe { trouve 7 etoiles } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      set result [csucac2 [file join $::audace(rep_userCatalogUcac2)] 10 5 5]
   } msg]

   if { $catchError==0 } {
      return [ llength [ lindex $result 1 ] ]
   } else {
      return $msg
   }
} -cleanup {

} -result "7"


#-------------------------------------------------------------------------------
test libcatalog_csucac3_sansparam { csucac3 sans parametre } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      #--- je recupere le message d'erreur "usage ..."
      set result [csucac3]
   } msg]
   return $msg
} -cleanup {

} -result "usage: csucac3 pathOfCatalog ra(deg) dec(deg) radius(arcmin) ?magnitudeFaint(mag)? ?magnitudeBright(mag)?"


#-------------------------------------------------------------------------------
test libcatalog_csucac3_catalog_existe { trouve 15 etoiles } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      set result [csucac3 [file join $::audace(rep_userCatalogUcac3)] 10 5 5]
   } msg]

   if { $catchError==0 } {
      return [ llength [ lindex $result 1 ] ]
   } else {
      return $msg
   }
} -cleanup {

} -result "15"


#-------------------------------------------------------------------------------
test libcatalog_csucac4_sansparam { csucac4 sans parametre } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      #--- je recupere le message d'erreur "usage ..."
      set result [csucac4]
   } msg]
   return $msg
} -cleanup {

} -result "usage: csucac4 pathOfCatalog ra(deg) dec(deg) radius(arcmin) ?magnitudeFaint(mag)? ?magnitudeBright(mag)?"


#-------------------------------------------------------------------------------
test libcatalog_csucac4_catalog_existe { trouve 16 etoiles } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      set result [csucac4 [file join $::audace(rep_userCatalogUcac4)] 10 5 5]
   } msg]

   if { $catchError==0 } {
      return [ llength [ lindex $result 1 ] ]
   } else {
      return $msg
   }
} -cleanup {

} -result "16"


#-------------------------------------------------------------------------------
test libcatalog_cs2mass_sansparam { cs2mass sans parametre } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      #--- je recupere le message d'erreur "usage ..."
      set result [cs2mass]
   } msg]
   return $msg
} -cleanup {

} -result "usage: cs2mass pathOfCatalog ra(deg) dec(deg) radius(arcmin) ?magnitudeFaint(mag)? ?magnitudeBright(mag)?"


#-------------------------------------------------------------------------------
test libcatalog_cs2mass_catalog_existe { trouve 52 etoiles } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      set result [cs2mass [file join $::audace(rep_userCatalog2mass)] 10 5 5]
   } msg]

   if { $catchError==0 } {
      return [ llength [ lindex $result 1 ] ]
   } else {
      return $msg
   }
} -cleanup {

} -result "52"


#-------------------------------------------------------------------------------
test libcatalog_csusnoa2_sansparam { csusnoa2 sans parametre } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      #--- je recupere le message d'erreur "usage ..."
      set result [csusnoa2]
   } msg]
   return $msg
} -cleanup {

} -result "usage: csusnoa2 pathOfCatalog ra(deg) dec(deg) radius(arcmin) ?magnitudeFaint(mag)? ?magnitudeBright(mag)?"


#-------------------------------------------------------------------------------
test libcatalog_csusnoa2_catalog_existe { trouve 59 etoiles } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      set result [csusnoa2 [file join $::audace(rep_userCatalogUsnoa2)] 10 5 5]
   } msg]

   if { $catchError==0 } {
      return [ llength [ lindex $result 1 ] ]
   } else {
      return $msg
   }
} -cleanup {

} -result "59"


#-------------------------------------------------------------------------------
test libcatalog_csppmx_sansparam { csppmx sans parametre } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      #--- je recupere le message d'erreur "usage ..."
      set result [csppmx]
   } msg]
   return $msg
} -cleanup {

} -result "usage: csppmx pathOfCatalog ra(deg) dec(deg) radius(arcmin) ?magnitudeFaint(mag)? ?magnitudeBright(mag)?"


#-------------------------------------------------------------------------------
test libcatalog_csppmx_catalog_existe { trouve 7 etoiles } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      set result [csppmx [file join $::audace(rep_userCatalogPpmx)] 10 5 5]
   } msg]

   if { $catchError==0 } {
      return [ llength [ lindex $result 1 ] ]
   } else {
      return $msg
   }
} -cleanup {

} -result "7"


#-------------------------------------------------------------------------------
test libcatalog_csppmxl_sansparam { csppmxl sans parametre } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      #--- je recupere le message d'erreur "usage ..."
      set result [csppmxl]
   } msg]
   return $msg
} -cleanup {

} -result "usage: csppmxl pathOfCatalog ra(deg) dec(deg) radius(arcmin) ?magnitudeFaint(mag)? ?magnitudeBright(mag)?"


#-------------------------------------------------------------------------------
test libcatalog_csppmxl_catalog_existe { trouve 160 etoiles } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      set result [csppmxl [file join $::audace(rep_userCatalogPpmxl)] 10 5 5]
   } msg]

   if { $catchError==0 } {
      return [ llength [ lindex $result 1 ] ]
   } else {
      return $msg
   }
} -cleanup {

} -result "160"


#-------------------------------------------------------------------------------
test libcatalog_csnomad1_sansparam { csnomad1 sans parametre } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      #--- je recupere le message d'erreur "usage ..."
      set result [csnomad1]
   } msg]
   return $msg
} -cleanup {

} -result "usage: csnomad1 pathOfCatalog ra(deg) dec(deg) radius(arcmin) ?magnitudeFaint(mag)? ?magnitudeBright(mag)?"


#-------------------------------------------------------------------------------
test libcatalog_csnomad1_catalog_existe { trouve 181 etoiles } -constraints {
   AUDACE
} -setup {

} -body {
   set catchError [ catch {
      set result [csnomad1 [file join $::audace(rep_userCatalogNomad1)] 10 5 5]
   } msg]

   if { $catchError==0 } {
      return [ llength [ lindex $result 1 ] ]
   } else {
      return $msg
   }
} -cleanup {

} -result "181"


