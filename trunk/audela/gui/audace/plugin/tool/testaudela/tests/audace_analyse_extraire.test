#-----------------------------------------------------------------------------
#--   chaque test a pour entree une seule images RGB
#--   les fichiers .txt sont stockes dans rep_images
#--   l'option jpegfile est testee systematiquement
#--   le test porte sur :
#        l'existence de trois fichiers .txt et de trois fichiers jpeg
#        la concordance entre les valeurs au point {1 1} et les valeurs lues dans les fichiers
#-----------------------------------------------------------------------------

set visuNo 1
set bufNo [::confVisu::getBufNo $visuNo]
set w ".audace.prtr.usr"

variable SETUP {
   set ::conf(extension,defaut) .fit
   set ::conf(fichier,compres) 0
   ::blt::vector create attendu mesure -watchunset 1
   file copy -force [file join $::conf(testaudela,rep_images) rz_rgbr_8.fit] $::audace(rep_images)
   loadima [file join $::audace(rep_images) rz_rgbr_8.fit]
   attendu set [lrange [buf$bufNo getpix {1 1}] 1 end]
}

variable CLEANUP {
   #--   clic sur le bouton Fermer
   ::testaudela::clicButton $w.cmd.fermer
   #---  efface l'image
   ::confVisu::deleteImage $visuNo
   file delete "./rz_rgbr_8r.jpg" "./rz_rgbr_8g.jpg" "./rz_rgbr_8b.jpg"
   file delete "./${name}r.txt" "./${name}g.txt" "./${name}b.txt"
   ttscript2 "IMA/SERIES . rz_rgbr_8 * * .fit . . . . DELETE"
   ::blt::vector destroy attendu mesure
}

#-----------------------------------------------------------------------------
#--   test IMA/SERIES PROFILE direction=x
test imaseries_profile_x {extraire une ligne de rz_rbgr_8} -constraints {AUDACE} -setup $SETUP -body {
   #--   clic sur le menu "Analyse/Extraire/Une ligne..."
   ::testaudela::clicMenu $visuNo "$::caption(audace,menu,extract)" "$::caption(audace,menu,ligne)..."
   #--   saisit les coordonnees de la zone a extraire
   ::testaudela::putLabelEntry $w.funoptions.offset 1
   #--   selectionne l'option "Options"
   ::testaudela::clicCheckButton $w.ttoptions.che "1"
   #--   selectionne l'option "jpegfile"
   ::testaudela::clicCheckButton $w.ttoptions.jpegfile "1"
   #--   le nom de sortie est identique au nom de l'image d'entree
   #--   donc il n'y a rien a saisir
   set name $::prtr::filename
   #--   clic sur le bouton Appliquer
   ::testaudela::clicButton $w.cmd.appliquer

   #--   procedure de controle
   set result "0"
   #--   le nom de sortie du fichier txt est le nom par defaut (row)
   set name $::prtr::filename
   foreach file [list ${name}r.txt ${name}g.txt ${name}b.txt] {
      if {[file exists [file join $::audace(rep_images) $file]]} {
         incr result
         #--   ouvre le fichier
         set fd [open "./$file" r+]
         gets $fd content
         mesure append [lindex [gets $fd] end]
         close $fd
      }
   }
   attendu expr {round(attendu-mesure)}
   incr result [llength [attendu search 0]]
   foreach file [list rz_rgbr_8r.jpg rz_rgbr_8g.jpg rz_rgbr_8b.jpg] {
      if {[file exists $file]} {incr result}
   }
   return $result
} -cleanup $CLEANUP -result "9"


#--   test IMA/SERIES PROFILE direction=y
test imaseries_profile_y {extraire une colonne de rz_rbgr_8b} -constraints {AUDACE} -setup $SETUP -body {
   #--   clic sur le menu "Analyse/Extraire/Une colonne..."
   ::testaudela::clicMenu $visuNo "$::caption(audace,menu,extract)" "$::caption(audace,menu,colonne)..."
   #--   saisit les coordonnees de la zone a extraire
   ::testaudela::putLabelEntry $w.funoptions.offset 1
   #--   selectionne l'option "Options"
   ::testaudela::clicCheckButton $w.ttoptions.che "1"
   #--   selectionne l'option "jpegfile"
   ::testaudela::clicCheckButton $w.ttoptions.jpegfile "1"
   #--   le nom de sortie est identique au nom de l'image d'entree
   #--   donc il n'y a rien a saisir
   set name $::prtr::filename
   #--   clic sur le bouton Appliquer
   ::testaudela::clicButton $w.cmd.appliquer

   #--   procedure de controle
   set result "0"
   foreach file [list ${name}r.txt ${name}g.txt ${name}b.txt] {
      if {[file exists "./$file"]} {
         incr result
         #--   ouvre le fichier
         set fd [open "./$file" r+]
         gets $fd content
         mesure append [lindex [gets $fd] end]
         close $fd
      }
   }
   attendu expr {round(attendu-mesure)}
   incr result [llength [attendu search 0]]
   foreach file [list rz_rgbr_8r.jpg rz_rgbr_8g.jpg rz_rgbr_8b.jpg] {
      if {[file exists $file]} {incr result}
   }
   return $result
} -cleanup $CLEANUP -result "9"


#--   IMA/SERIES MATRIX
test imaseries_matrix {extraire une zone de rz_rbgr_8} -constraints {AUDACE} -setup $SETUP -body {
   #--   clic sur le menu "Analyse/Extraire/Une zone..."
   ::testaudela::clicMenu $visuNo "$::caption(audace,menu,extract)" "$::caption(audace,menu,matrice)..."
   #--   saisit les coordonnees de la zone a extraire
   ::testaudela::putLabelEntry $w.funoptions.x1 1
   ::testaudela::putLabelEntry $w.funoptions.y1 1
   ::testaudela::putLabelEntry $w.funoptions.x2 10
   ::testaudela::putLabelEntry $w.funoptions.y2 10
   #--   selectionne l'option "Options"
   ::testaudela::clicCheckButton $w.ttoptions.che "1"
   #--   selectionne l'option "jpegfile"
   ::testaudela::clicCheckButton $w.ttoptions.jpegfile "1"
   #--   le nom de sortie est identique au nom de l'image d'entree
   set name $::prtr::filematrix
   #--   clic sur le bouton Appliquer
   ::testaudela::clicButton $w.cmd.appliquer

   #--   procedure de controle
   set result "0"
   foreach file [list ${name}r.txt ${name}g.txt ${name}b.txt] {
      if {[file exists "./$file"]} {
         incr result
         #--   ouvre le fichier
         set fd [open "./$file" r+]
         gets $fd content
         mesure append [lindex [gets $fd] end]
         close $fd
      }
   }
   attendu expr {round(attendu-mesure)}
   incr result [llength [attendu search 0]]
   foreach file [list rz_rgbr_8r.jpg rz_rgbr_8g.jpg rz_rgbr_8b.jpg] {
      if {[file exists $file]} {incr result}
   }
   return $result
} -cleanup $CLEANUP -result "9"

